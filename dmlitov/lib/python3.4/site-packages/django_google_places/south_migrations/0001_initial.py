# -*- coding: utf-8 -*-
import datetime
from south.db import db
from south.v2 import SchemaMigration
from django.db import models


class Migration(SchemaMigration):

    def forwards(self, orm):
        # Adding model 'PlaceType'
        db.create_table(u'django_google_places_placetype', (
            (u'id', self.gf('django.db.models.fields.AutoField')(primary_key=True)),
            ('name', self.gf('django.db.models.fields.CharField')(max_length=255)),
        ))
        db.send_create_signal(u'django_google_places', ['PlaceType'])

        # Adding model 'Place'
        db.create_table(u'django_google_places_place', (
            (u'id', self.gf('django.db.models.fields.AutoField')(primary_key=True)),
            ('name', self.gf('django.db.models.fields.CharField')(max_length=255)),
            ('status', self.gf('django.db.models.fields.CharField')(max_length=16)),
            ('website', self.gf('django.db.models.fields.URLField')(max_length=200)),
            ('formatted_address', self.gf('django.db.models.fields.CharField')(max_length=255)),
            ('vicinity', self.gf('django.db.models.fields.CharField')(max_length=255)),
            ('latitude', self.gf('django.db.models.fields.DecimalField')(max_digits=9, decimal_places=6)),
            ('longitude', self.gf('django.db.models.fields.DecimalField')(max_digits=9, decimal_places=6)),
            ('icon', self.gf('django.db.models.fields.URLField')(max_length=200)),
            ('formatted_phone_number', self.gf('django.db.models.fields.CharField')(max_length=64, null=True)),
            ('international_phone_number', self.gf('django.db.models.fields.CharField')(max_length=255)),
            ('rating', self.gf('django.db.models.fields.DecimalField')(null=True, max_digits=3, decimal_places=2, blank=True)),
            ('url', self.gf('django.db.models.fields.URLField')(max_length=200)),
            ('utc_offset', self.gf('django.db.models.fields.IntegerField')()),
            ('reference', self.gf('django.db.models.fields.CharField')(max_length=255, db_index=True)),
            ('api_id', self.gf('django.db.models.fields.CharField')(unique=True, max_length=255)),
            ('created', self.gf('django.db.models.fields.DateTimeField')(auto_now_add=True, blank=True)),
            ('updated', self.gf('django.db.models.fields.DateTimeField')(auto_now=True, auto_now_add=True, blank=True)),
            ('syncd', self.gf('django.db.models.fields.DateTimeField')(auto_now_add=True, blank=True)),
        ))
        db.send_create_signal(u'django_google_places', ['Place'])

        # Adding M2M table for field place_types on 'Place'
        m2m_table_name = db.shorten_name(u'django_google_places_place_place_types')
        db.create_table(m2m_table_name, (
            ('id', models.AutoField(verbose_name='ID', primary_key=True, auto_created=True)),
            ('place', models.ForeignKey(orm[u'django_google_places.place'], null=False)),
            ('placetype', models.ForeignKey(orm[u'django_google_places.placetype'], null=False))
        ))
        db.create_unique(m2m_table_name, ['place_id', 'placetype_id'])

        # Adding model 'AddressComponentType'
        db.create_table(u'django_google_places_addresscomponenttype', (
            (u'id', self.gf('django.db.models.fields.AutoField')(primary_key=True)),
            ('name', self.gf('django.db.models.fields.CharField')(unique=True, max_length=255)),
        ))
        db.send_create_signal(u'django_google_places', ['AddressComponentType'])

        # Adding model 'AddressComponent'
        db.create_table(u'django_google_places_addresscomponent', (
            (u'id', self.gf('django.db.models.fields.AutoField')(primary_key=True)),
            ('place', self.gf('django.db.models.fields.related.ForeignKey')(related_name='address_components', to=orm['django_google_places.Place'])),
            ('long_name', self.gf('django.db.models.fields.CharField')(max_length=255)),
            ('short_name', self.gf('django.db.models.fields.CharField')(max_length=255)),
        ))
        db.send_create_signal(u'django_google_places', ['AddressComponent'])

        # Adding M2M table for field types on 'AddressComponent'
        m2m_table_name = db.shorten_name(u'django_google_places_addresscomponent_types')
        db.create_table(m2m_table_name, (
            ('id', models.AutoField(verbose_name='ID', primary_key=True, auto_created=True)),
            ('addresscomponent', models.ForeignKey(orm[u'django_google_places.addresscomponent'], null=False)),
            ('addresscomponenttype', models.ForeignKey(orm[u'django_google_places.addresscomponenttype'], null=False))
        ))
        db.create_unique(m2m_table_name, ['addresscomponent_id', 'addresscomponenttype_id'])

        # Adding model 'OpenPeriod'
        db.create_table(u'django_google_places_openperiod', (
            (u'id', self.gf('django.db.models.fields.AutoField')(primary_key=True)),
            ('place', self.gf('django.db.models.fields.related.ForeignKey')(related_name='opening_periods', to=orm['django_google_places.Place'])),
            ('open_day', self.gf('django.db.models.fields.SmallIntegerField')()),
            ('open_time', self.gf('django.db.models.fields.TimeField')()),
            ('close_day', self.gf('django.db.models.fields.SmallIntegerField')()),
            ('close_time', self.gf('django.db.models.fields.TimeField')()),
        ))
        db.send_create_signal(u'django_google_places', ['OpenPeriod'])

        # Adding model 'Review'
        db.create_table(u'django_google_places_review', (
            (u'id', self.gf('django.db.models.fields.AutoField')(primary_key=True)),
            ('place', self.gf('django.db.models.fields.related.ForeignKey')(related_name='reviews', to=orm['django_google_places.Place'])),
            ('author_name', self.gf('django.db.models.fields.CharField')(max_length=255)),
            ('author_url', self.gf('django.db.models.fields.CharField')(max_length=255, null=True)),
            ('rating', self.gf('django.db.models.fields.DecimalField')(max_digits=3, decimal_places=2)),
            ('text', self.gf('django.db.models.fields.TextField')()),
            ('reviewed', self.gf('django.db.models.fields.DateTimeField')()),
        ))
        db.send_create_signal(u'django_google_places', ['Review'])

        # Adding model 'ReviewAspect'
        db.create_table(u'django_google_places_reviewaspect', (
            (u'id', self.gf('django.db.models.fields.AutoField')(primary_key=True)),
            ('review', self.gf('django.db.models.fields.related.ForeignKey')(related_name='aspects', to=orm['django_google_places.Review'])),
            ('aspect_type', self.gf('django.db.models.fields.CharField')(max_length=32)),
            ('rating', self.gf('django.db.models.fields.SmallIntegerField')()),
        ))
        db.send_create_signal(u'django_google_places', ['ReviewAspect'])


    def backwards(self, orm):
        # Deleting model 'PlaceType'
        db.delete_table(u'django_google_places_placetype')

        # Deleting model 'Place'
        db.delete_table(u'django_google_places_place')

        # Removing M2M table for field place_types on 'Place'
        db.delete_table(db.shorten_name(u'django_google_places_place_place_types'))

        # Deleting model 'AddressComponentType'
        db.delete_table(u'django_google_places_addresscomponenttype')

        # Deleting model 'AddressComponent'
        db.delete_table(u'django_google_places_addresscomponent')

        # Removing M2M table for field types on 'AddressComponent'
        db.delete_table(db.shorten_name(u'django_google_places_addresscomponent_types'))

        # Deleting model 'OpenPeriod'
        db.delete_table(u'django_google_places_openperiod')

        # Deleting model 'Review'
        db.delete_table(u'django_google_places_review')

        # Deleting model 'ReviewAspect'
        db.delete_table(u'django_google_places_reviewaspect')


    models = {
        u'django_google_places.addresscomponent': {
            'Meta': {'object_name': 'AddressComponent'},
            u'id': ('django.db.models.fields.AutoField', [], {'primary_key': 'True'}),
            'long_name': ('django.db.models.fields.CharField', [], {'max_length': '255'}),
            'place': ('django.db.models.fields.related.ForeignKey', [], {'related_name': "'address_components'", 'to': u"orm['django_google_places.Place']"}),
            'short_name': ('django.db.models.fields.CharField', [], {'max_length': '255'}),
            'types': ('django.db.models.fields.related.ManyToManyField', [], {'related_name': "'address_components'", 'symmetrical': 'False', 'to': u"orm['django_google_places.AddressComponentType']"})
        },
        u'django_google_places.addresscomponenttype': {
            'Meta': {'object_name': 'AddressComponentType'},
            u'id': ('django.db.models.fields.AutoField', [], {'primary_key': 'True'}),
            'name': ('django.db.models.fields.CharField', [], {'unique': 'True', 'max_length': '255'})
        },
        u'django_google_places.openperiod': {
            'Meta': {'object_name': 'OpenPeriod'},
            'close_day': ('django.db.models.fields.SmallIntegerField', [], {}),
            'close_time': ('django.db.models.fields.TimeField', [], {}),
            u'id': ('django.db.models.fields.AutoField', [], {'primary_key': 'True'}),
            'open_day': ('django.db.models.fields.SmallIntegerField', [], {}),
            'open_time': ('django.db.models.fields.TimeField', [], {}),
            'place': ('django.db.models.fields.related.ForeignKey', [], {'related_name': "'opening_periods'", 'to': u"orm['django_google_places.Place']"})
        },
        u'django_google_places.place': {
            'Meta': {'object_name': 'Place'},
            'api_id': ('django.db.models.fields.CharField', [], {'unique': 'True', 'max_length': '255'}),
            'created': ('django.db.models.fields.DateTimeField', [], {'auto_now_add': 'True', 'blank': 'True'}),
            'formatted_address': ('django.db.models.fields.CharField', [], {'max_length': '255'}),
            'formatted_phone_number': ('django.db.models.fields.CharField', [], {'max_length': '64', 'null': 'True'}),
            'icon': ('django.db.models.fields.URLField', [], {'max_length': '200'}),
            u'id': ('django.db.models.fields.AutoField', [], {'primary_key': 'True'}),
            'international_phone_number': ('django.db.models.fields.CharField', [], {'max_length': '255'}),
            'latitude': ('django.db.models.fields.DecimalField', [], {'max_digits': '9', 'decimal_places': '6'}),
            'longitude': ('django.db.models.fields.DecimalField', [], {'max_digits': '9', 'decimal_places': '6'}),
            'name': ('django.db.models.fields.CharField', [], {'max_length': '255'}),
            'place_types': ('django.db.models.fields.related.ManyToManyField', [], {'related_name': "'places'", 'symmetrical': 'False', 'to': u"orm['django_google_places.PlaceType']"}),
            'rating': ('django.db.models.fields.DecimalField', [], {'null': 'True', 'max_digits': '3', 'decimal_places': '2', 'blank': 'True'}),
            'reference': ('django.db.models.fields.CharField', [], {'max_length': '255', 'db_index': 'True'}),
            'status': ('django.db.models.fields.CharField', [], {'max_length': '16'}),
            'syncd': ('django.db.models.fields.DateTimeField', [], {'auto_now_add': 'True', 'blank': 'True'}),
            'updated': ('django.db.models.fields.DateTimeField', [], {'auto_now': 'True', 'auto_now_add': 'True', 'blank': 'True'}),
            'url': ('django.db.models.fields.URLField', [], {'max_length': '200'}),
            'utc_offset': ('django.db.models.fields.IntegerField', [], {}),
            'vicinity': ('django.db.models.fields.CharField', [], {'max_length': '255'}),
            'website': ('django.db.models.fields.URLField', [], {'max_length': '200'})
        },
        u'django_google_places.placetype': {
            'Meta': {'object_name': 'PlaceType'},
            u'id': ('django.db.models.fields.AutoField', [], {'primary_key': 'True'}),
            'name': ('django.db.models.fields.CharField', [], {'max_length': '255'})
        },
        u'django_google_places.review': {
            'Meta': {'object_name': 'Review'},
            'author_name': ('django.db.models.fields.CharField', [], {'max_length': '255'}),
            'author_url': ('django.db.models.fields.CharField', [], {'max_length': '255', 'null': 'True'}),
            u'id': ('django.db.models.fields.AutoField', [], {'primary_key': 'True'}),
            'place': ('django.db.models.fields.related.ForeignKey', [], {'related_name': "'reviews'", 'to': u"orm['django_google_places.Place']"}),
            'rating': ('django.db.models.fields.DecimalField', [], {'max_digits': '3', 'decimal_places': '2'}),
            'reviewed': ('django.db.models.fields.DateTimeField', [], {}),
            'text': ('django.db.models.fields.TextField', [], {})
        },
        u'django_google_places.reviewaspect': {
            'Meta': {'object_name': 'ReviewAspect'},
            'aspect_type': ('django.db.models.fields.CharField', [], {'max_length': '32'}),
            u'id': ('django.db.models.fields.AutoField', [], {'primary_key': 'True'}),
            'rating': ('django.db.models.fields.SmallIntegerField', [], {}),
            'review': ('django.db.models.fields.related.ForeignKey', [], {'related_name': "'aspects'", 'to': u"orm['django_google_places.Review']"})
        }
    }

    complete_apps = ['django_google_places']